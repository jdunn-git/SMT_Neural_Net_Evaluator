MODULE main
  VAR
    mode : {h1, h2, out, done};
    output : 0..100;

    h1_out : 0..100;
    h2_out : 0..100;

  DEFINE h1_out_weight := <<hidden_1_output_weight>>;
  DEFINE h2_out_weight := <<hidden_2_output_weight>>;

  DEFINE h1_in1 := <<input_1>>;
  DEFINE h1_in2 := <<input_2>>;
  DEFINE h1_in3 := <<input_3>>;
  DEFINE h2_in1 := <<input_1>>;
  DEFINE h2_in2 := <<input_2>>;
  DEFINE h2_in3 := <<input_3>>;

  DEFINE h1_in1_weight := <<hidden_1_input_1_weight>>;
  DEFINE h1_in2_weight := <<hidden_1_input_2_weight>>;
  DEFINE h1_in3_weight := <<hidden_1_input_3_weight>>;

  DEFINE h2_in1_weight := <<hidden_2_input_1_weight>>;
  DEFINE h2_in2_weight := <<hidden_2_input_2_weight>>;
  DEFINE h2_in3_weight := <<hidden_2_input_3_weight>>;

  DEFINE h1_bias := <<hidden_1_bias>>;
  DEFINE h2_bias := <<hidden_2_bias>>;
  DEFINE out_bias := <<output_bias>>;

  ASSIGN
  	next(mode) := case
  				mode = h1 : h2; -- transitioning from h1 to h2 so that both can be evaluated in a transition system
  				mode = h2 : out;
  				mode = out : done;
  				TRUE : mode; -- stay the same
  				esac;
	  next(h1_out) := case
				mode = h1 & ((h1_in1 * h1_in1_weight) + (h1_in2 * h1_in2_weight) + (h1_in3 * h1_in3_weight) + h1_bias) <= 0 : 0;
        mode = h1 & ((h1_in1 * h1_in1_weight) + (h1_in2 * h1_in2_weight) + (h1_in3 * h1_in3_weight) + h1_bias) > 500 : ((h1_in1 * h1_in1_weight) + (h1_in2 * h1_in2_weight) + (h1_in3 * h1_in3_weight) + h1_bias);
                TRUE : h1_out;
  				esac;
	  next(h2_out) := case
				mode = h2 & ((h2_in1 * h2_in1_weight) + (h2_in2 * h2_in2_weight) + (h2_in3 * h2_in3_weight) + h2_bias) <= 0 : 0;
        mode = h2 & ((h2_in1 * h2_in1_weight) + (h2_in2 * h2_in2_weight) + (h2_in3 * h2_in3_weight) + h2_bias) > 0 : ((h2_in1 * h2_in1_weight) + (h2_in2 * h2_in2_weight) + (h2_in3 * h2_in3_weight) + h2_bias);
                TRUE : h2_out;
  				esac;
  	next(output) := case
          mode = out & (h1_out_weight * h1_out) + (h2_out_weight * h2_out) + (out_bias) < 0: 0;
          mode = out & (h1_out_weight * h1_out) + (h2_out_weight * h2_out) + (out_bias) > 100: 100;
          mode = out : (h1_out_weight * h1_out) + (h2_out_weight * h2_out) + (out_bias);
                TRUE : output;
  				esac;

  	init(mode) := h1;
  	init(h1_out) := 0;
  	init(h2_out) := 0;
  	init(output) := 0;

-- Plugging in some training data now in a templatized way
INVARSPEC
  (mode = done) -> output <<output_symbol>> <<output_threshold>>


